{
    "name": "hunzhiwange/queryphp",
    "description": "The QueryPHP Application.",
    "keywords": ["php", "framework", "queryphp", "vue", "swoole", "iview"],
    "license": "MIT",
    "homepage": "http://www.queryphp.com",
    "support": {
        "issues": "https://github.com/hunzhiwange/queryphp/issues",
        "source": "https://github.com/hunzhiwange/queryphp"
    },
    "authors": [{
        "name": "Xiangmin Liu",
        "email": "635750556@qq.com"
    }],
    "require": {
        "php": "^7.4.0",
        "hunzhiwange/framework": "dev-master"
    },
    "require-dev": {
        "codedungeon/phpunit-result-printer": "^0.26.2",
        "php-coveralls/php-coveralls": "^2.1",
        "phpunit/phpunit": "^8.2.5",
        "phpunit/php-token-stream": "~3.1.1",
        "fzaninotto/faker": "^1.6",
        "robmorgan/phinx": "^0.9.2"
    },
    "autoload": {
        "files": [
            "common/Infra/functions.php"
        ],
        "psr-4": {
            "App\\" : "application/app",
            "Admin\\" : "application/admin",
            "Common\\" : "common"
        },
        "exclude-from-classmap": [
            "/tests/",
            "/**/Tests/",
            "/**/*Test.php",
            "/**/Fixtures/",
            "/vendor/symfony/",
            "/vendor/zircote/",
            "/vendor/filp/",
            "/vendor/spiral/",
            "/vendor/zendframework/",
            "/vendor/leric/",
            "/vendor/maximebf/",
            "/vendor/vlucas/",
            "/vendor/nunomaduro/",
            "/vendor/gettext/",
            "/vendor/doctrine/",
            "/vendor/egulias/",
            "/vendor/hunzhiwange/framework/src/Leevel/Protocol/",
            "/vendor/hunzhiwange/framework/src/Leevel/Debug/",
            "/vendor/psr/",
            "/vendor/clio/",
            "/vendor/hunzhiwange/framework/src/**/Console/",
            "/vendor/monolog/",
            "/vendor/codedungeon/",
            "/vendor/jakub-onderka/",
            "/vendor/nesbot/carbon/src/JsonSerializable.php",
            "/vendor/league/",
            "@/vendor/symfony/:Product not used",
            "@/vendor/zircote/:Product not used",
            "@/vendor/filp/:Product not used",
            "@/vendor/spiral/:Only roadRunner used",
            "@/vendor/zendframework/:Only roadRunner used",
            "@/vendor/leric/:Only swoole rpc used",
            "@/vendor/maximebf/:Product not used",
            "@/vendor/vlucas/:Product not used",
            "@/vendor/nunomaduro/:Product not used",
            "@/vendor/gettext/:Product not used",
            "@/vendor/doctrine/:Product not used",
            "@/vendor/egulias/:Product not used",
            "@/vendor/hunzhiwange/framework/src/Leevel/Protocol/:Only swoole used",
            "@/vendor/hunzhiwange/framework/src/Leevel/Debug/:Product not used",
            "@/vendor/psr/:Product not used",
            "@/vendor/clio/:Product not used",
            "@/vendor/hunzhiwange/framework/src/**/Console/:Product not used",
            "@/vendor/monolog/:Product not used",
            "@/vendor/codedungeon/:Product not used",
            "@/vendor/jakub-onderka/:Product not used",
            "@/vendor/nesbot/carbon/src/JsonSerializable.php:Product not used",
            "@/vendor/league/:Only upload app will used"
        ]
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0-dev"
        },
        "leevel": {
            "@providers": "The prividers",
            "providers": [
                "Common\\Infra\\Provider\\App",
                "Common\\Infra\\Provider\\Event",
                "Common\\Infra\\Provider\\Router"
            ],
            "@ignores": "Ignore the automatic discovery prividers",
            "ignores": [
                "Leevel\\Notexits\\Provider\\Register"
            ],
            "@commands": "The commands",
            "commands": [
                "Common\\App\\Console"
            ],
            "@options": "The extend options",
            "options": {
                "test": "common/ui/option/test.php"
            },
            "@i18ns": "The extend i18ns",
            "i18ns": [
                "common/ui/i18n"
            ],
            "@metas": "The metas",
            "metas": {
                "foo": "bar"
            }
        },
        "leevel-console" : {
            "view-cache": {
                "paths": [
                    "common",
                    "application"
                ]
            },
            "database-entity": {
                "show_prop_black": [
                    "update_at",
                    "delete_at",
                    "create_account",
                    "update_account"
                ],
                "delete_at": "delete_at"
            }
        }
    },
    "scripts": {
        "test": "@php ./build/phpunit --colors=always",
        "test-coverage": "@php ./build/phpunit --colors=always -c phpunit.xml.html",
        "php-cs-fixer": "@php ./build/php-cs-fixer fix",
        "phpstan": "@php ./build/phpstan analyse",
        "migrate": "@php ./leevel migrate:migrate",
        "migrate-phpunit": "@php ./leevel migrate:migrate -e env.phpunit",
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php -r \"file_exists('.env.phpunit') || copy('.env.phpunit.example', '.env.phpunit');\"",
            "@php -r \"file_exists('frontend/.env.local') || copy('frontend/.env.example', 'frontend/.env.local');\"",
            "@php -r \"file_exists('frontend/.env.production') || copy('frontend/.env.example', 'frontend/.env.production');\""
        ],
        "post-create-project-cmd": [
            "@php leevel links"
        ],
        "post-autoload-dump": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\"",
            "@php -r \"file_exists('.env.phpunit') || copy('.env.phpunit.example', '.env.phpunit');\"",
            "@php -r \"file_exists('frontend/.env.local') || copy('frontend/.env.example', 'frontend/.env.local');\"",
            "@php -r \"file_exists('frontend/.env.production') || copy('frontend/.env.example', 'frontend/.env.production');\""
        ]
    },
    "config": {
        "preferred-install": "dist",
        "sort-packages": true,
        "optimize-autoloader": true
    },
    "minimum-stability": "dev",
    "prefer-stable": true
}
